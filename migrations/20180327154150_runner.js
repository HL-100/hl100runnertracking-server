exports.up = (knex, Promise) =>
  knex.schema.createTable("runners", table => {
    table.increments("id").primary();
    table.string("bibNumber");
    table.string("name");
    table.string("shirtSize"),
    table.string("locationStaying"),
    table.string("shoeBath"),
    table.string("medicalCondition"),
    table.string("medication"),
    table.boolean("Started");
    table.time("RasberryOneIn");
    table.time("RasberryOneOut");
    table.time("AnteroIn");
    table.time("AnteroOut");
    table.time("StElmoOneIn");
    table.time("StElmoOneOut");
    table.time("CottonwoodIn");
    table.time("CottonwoodOut");
    table.time("StElmoTwoOut");
    table.time("StElmoTwoIn");
    table.time("HancockIn");
    table.time("HancockOut");
    table.time("LostWonderIn");
    table.time("LostWonderOut");
    table.time("PurgatoryIn");
    table.time("PurgatoryOut");
    table.time("MonarchIn");
    table.time("MonarchOut");
    table.time("FoosesIn");
    table.time("FoosesOut");
    table.time("BlanksIn");
    table.time("BlanksOut");
    table.time("RasberryTwoIn");
    table.time("RasberryTwoOut");
    table.boolean("HancockPacerIn");
    table.boolean("HancockPacerOut");
    table.boolean("LostWonderPacerIn");
    table.boolean("LostWonderPacerOut");
    table.boolean("PurgatoryPacerIn");
    table.boolean("PurgatoryPacerOut");
    table.boolean("MonarchPacerIn");
    table.boolean("MonarchPacerOut");
    table.boolean("FoosesPacerIn");
    table.boolean("FoosesPacerOut");
    table.boolean("BlanksPacerIn");
    table.boolean("BlanksPacerOut");
    table.boolean("RasberryTwoPacerIn");
    table.boolean("RasberryTwoPacerOut");
    table.time("Finish");
  });

exports.down = (knex, Promise) => knex.schema.dropTableIfExists("runners");
